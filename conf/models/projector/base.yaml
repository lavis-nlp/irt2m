# Configuration for projector training

# irt2m

# tested: bert base models (see transformers lib)
encoder: bert-base-cased

# available format keys:
#   prefix: short prefix based on the configuration (see train._build_prefix)
#   dataset: the (normalised) upstream IRT2.name property (e.g. irt2-cde-l)
#   date: start datetime formatted as %Y-%m-%d_%H-%M-%S
#   encoder: as defined
#   projector: as defined
out: data/models/{prefix}/{date}

# which kgc evaluations to run while training
evaluations:
  - kgc/train         # closed world kgc with original embeddings (run once before training)
  - kgc/transductive  # closed world kgc with projections (irt2.closed_triples)
  - kgc/inductive     # open world kgc with projections (irt2.open_kgc_val*)
  # - kgc/test          # currently disabled


# pytorch

# for available optimizers see irt2m.models.OPTIMIZERS
optimizer: adam
optimizer_kwargs:
  lr: 5.0e-06

# pytorch lightning

checkpoint:
  every_n_epochs: 1
  mode: max
  monitor: kgc/inductive/hits@10
  save_last: true
  save_top_k: 1

early_stopping_args:
  mode: max
  monitor: kgc/inductive/hits@10

scheduler: constant
scheduler_kwargs: {}

trainer:
  gpus: 1

  # 12886 steps = 1 epoch for cde-l
  # max_steps: 500_000
  max_epochs: 100

  # limit_train_batches: 100
  # limit_val_batches: 100

  # this is the "debug" flag
  fast_dev_run: false

wandb:
  project: irt2-projector
